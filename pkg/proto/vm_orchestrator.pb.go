// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: vm_orchestrator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartVMReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workload      string                 `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMReq) Reset() {
	*x = StartVMReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMReq) ProtoMessage() {}

func (x *StartVMReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMReq.ProtoReflect.Descriptor instead.
func (*StartVMReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *StartVMReq) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

type SnapshotVMReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SnapId        string                 `protobuf:"bytes,2,opt,name=snap_id,json=snapId,proto3" json:"snap_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotVMReq) Reset() {
	*x = SnapshotVMReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotVMReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotVMReq) ProtoMessage() {}

func (x *SnapshotVMReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotVMReq.ProtoReflect.Descriptor instead.
func (*SnapshotVMReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotVMReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SnapshotVMReq) GetSnapId() string {
	if x != nil {
		return x.SnapId
	}
	return ""
}

type RestoreVMReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SnapId        string                 `protobuf:"bytes,1,opt,name=snap_id,json=snapId,proto3" json:"snap_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreVMReq) Reset() {
	*x = RestoreVMReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreVMReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreVMReq) ProtoMessage() {}

func (x *RestoreVMReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreVMReq.ProtoReflect.Descriptor instead.
func (*RestoreVMReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *RestoreVMReq) GetSnapId() string {
	if x != nil {
		return x.SnapId
	}
	return ""
}

type StopVMReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMReq) Reset() {
	*x = StopVMReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMReq) ProtoMessage() {}

func (x *StopVMReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMReq.ProtoReflect.Descriptor instead.
func (*StopVMReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *StopVMReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVMIPReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMIPReq) Reset() {
	*x = GetVMIPReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMIPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMIPReq) ProtoMessage() {}

func (x *GetVMIPReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMIPReq.ProtoReflect.Descriptor instead.
func (*GetVMIPReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *GetVMIPReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVMMetadataReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMMetadataReq) Reset() {
	*x = GetVMMetadataReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMMetadataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMMetadataReq) ProtoMessage() {}

func (x *GetVMMetadataReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMMetadataReq.ProtoReflect.Descriptor instead.
func (*GetVMMetadataReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *GetVMMetadataReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SendSSHCommandReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command       []string               `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSSHCommandReq) Reset() {
	*x = SendSSHCommandReq{}
	mi := &file_vm_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSSHCommandReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSSHCommandReq) ProtoMessage() {}

func (x *SendSSHCommandReq) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSSHCommandReq.ProtoReflect.Descriptor instead.
func (*SendSSHCommandReq) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *SendSSHCommandReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SendSSHCommandReq) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_vm_orchestrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{7}
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_vm_orchestrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartVMResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Chroot        string                 `protobuf:"bytes,2,opt,name=chroot,proto3" json:"chroot,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Pid           string                 `protobuf:"bytes,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Workload      string                 `protobuf:"bytes,5,opt,name=workload,proto3" json:"workload,omitempty"`
	State         string                 `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMResp) Reset() {
	*x = StartVMResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMResp) ProtoMessage() {}

func (x *StartVMResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMResp.ProtoReflect.Descriptor instead.
func (*StartVMResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{9}
}

func (x *StartVMResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartVMResp) GetChroot() string {
	if x != nil {
		return x.Chroot
	}
	return ""
}

func (x *StartVMResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StartVMResp) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *StartVMResp) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

func (x *StartVMResp) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type SnapshotVMResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SnapId        string                 `protobuf:"bytes,2,opt,name=snap_id,json=snapId,proto3" json:"snap_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotVMResp) Reset() {
	*x = SnapshotVMResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotVMResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotVMResp) ProtoMessage() {}

func (x *SnapshotVMResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotVMResp.ProtoReflect.Descriptor instead.
func (*SnapshotVMResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{10}
}

func (x *SnapshotVMResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SnapshotVMResp) GetSnapId() string {
	if x != nil {
		return x.SnapId
	}
	return ""
}

type RestoreVMResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Chroot        string                 `protobuf:"bytes,2,opt,name=chroot,proto3" json:"chroot,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Pid           string                 `protobuf:"bytes,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Workload      string                 `protobuf:"bytes,5,opt,name=workload,proto3" json:"workload,omitempty"`
	State         string                 `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreVMResp) Reset() {
	*x = RestoreVMResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreVMResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreVMResp) ProtoMessage() {}

func (x *RestoreVMResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreVMResp.ProtoReflect.Descriptor instead.
func (*RestoreVMResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{11}
}

func (x *RestoreVMResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RestoreVMResp) GetChroot() string {
	if x != nil {
		return x.Chroot
	}
	return ""
}

func (x *RestoreVMResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RestoreVMResp) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *RestoreVMResp) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

func (x *RestoreVMResp) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type GetVMIPResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMIPResp) Reset() {
	*x = GetVMIPResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMIPResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMIPResp) ProtoMessage() {}

func (x *GetVMIPResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMIPResp.ProtoReflect.Descriptor instead.
func (*GetVMIPResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{12}
}

func (x *GetVMIPResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetVMIPResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type SnapshotList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshots     []string               `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotList) Reset() {
	*x = SnapshotList{}
	mi := &file_vm_orchestrator_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotList) ProtoMessage() {}

func (x *SnapshotList) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotList.ProtoReflect.Descriptor instead.
func (*SnapshotList) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{13}
}

func (x *SnapshotList) GetSnapshots() []string {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type GetVMMetadataResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Chroot        string                 `protobuf:"bytes,2,opt,name=chroot,proto3" json:"chroot,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Pid           string                 `protobuf:"bytes,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Workload      string                 `protobuf:"bytes,5,opt,name=workload,proto3" json:"workload,omitempty"`
	State         string                 `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMMetadataResp) Reset() {
	*x = GetVMMetadataResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMMetadataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMMetadataResp) ProtoMessage() {}

func (x *GetVMMetadataResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMMetadataResp.ProtoReflect.Descriptor instead.
func (*GetVMMetadataResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{14}
}

func (x *GetVMMetadataResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVMMetadataResp) GetChroot() string {
	if x != nil {
		return x.Chroot
	}
	return ""
}

func (x *GetVMMetadataResp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetVMMetadataResp) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *GetVMMetadataResp) GetWorkload() string {
	if x != nil {
		return x.Workload
	}
	return ""
}

func (x *GetVMMetadataResp) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type VMList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vms           []*GetVMMetadataResp   `protobuf:"bytes,1,rep,name=vms,proto3" json:"vms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMList) Reset() {
	*x = VMList{}
	mi := &file_vm_orchestrator_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMList) ProtoMessage() {}

func (x *VMList) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMList.ProtoReflect.Descriptor instead.
func (*VMList) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{15}
}

func (x *VMList) GetVms() []*GetVMMetadataResp {
	if x != nil {
		return x.Vms
	}
	return nil
}

type SendSSHCommandResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Output        string                 `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSSHCommandResp) Reset() {
	*x = SendSSHCommandResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSSHCommandResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSSHCommandResp) ProtoMessage() {}

func (x *SendSSHCommandResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSSHCommandResp.ProtoReflect.Descriptor instead.
func (*SendSSHCommandResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{16}
}

func (x *SendSSHCommandResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendSSHCommandResp) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type GetPIDResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           uint32                 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPIDResp) Reset() {
	*x = GetPIDResp{}
	mi := &file_vm_orchestrator_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPIDResp) ProtoMessage() {}

func (x *GetPIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_vm_orchestrator_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPIDResp.ProtoReflect.Descriptor instead.
func (*GetPIDResp) Descriptor() ([]byte, []int) {
	return file_vm_orchestrator_proto_rawDescGZIP(), []int{17}
}

func (x *GetPIDResp) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

var File_vm_orchestrator_proto protoreflect.FileDescriptor

const file_vm_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x15vm_orchestrator.proto\x12\x05proto\"(\n" +
	"\n" +
	"StartVMReq\x12\x1a\n" +
	"\bworkload\x18\x01 \x01(\tR\bworkload\"8\n" +
	"\rSnapshotVMReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\asnap_id\x18\x02 \x01(\tR\x06snapId\"'\n" +
	"\fRestoreVMReq\x12\x17\n" +
	"\asnap_id\x18\x01 \x01(\tR\x06snapId\"\x1b\n" +
	"\tStopVMReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1c\n" +
	"\n" +
	"GetVMIPReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\"\n" +
	"\x10GetVMMetadataReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"=\n" +
	"\x11SendSSHCommandReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acommand\x18\x02 \x03(\tR\acommand\"\a\n" +
	"\x05Empty\"\"\n" +
	"\x06Status\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x89\x01\n" +
	"\vStartVMResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06chroot\x18\x02 \x01(\tR\x06chroot\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\tR\x03pid\x12\x1a\n" +
	"\bworkload\x18\x05 \x01(\tR\bworkload\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\"C\n" +
	"\x0eSnapshotVMResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x17\n" +
	"\asnap_id\x18\x02 \x01(\tR\x06snapId\"\x8b\x01\n" +
	"\rRestoreVMResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06chroot\x18\x02 \x01(\tR\x06chroot\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\tR\x03pid\x12\x1a\n" +
	"\bworkload\x18\x05 \x01(\tR\bworkload\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\"7\n" +
	"\vGetVMIPResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\",\n" +
	"\fSnapshotList\x12\x1c\n" +
	"\tsnapshots\x18\x01 \x03(\tR\tsnapshots\"\x8f\x01\n" +
	"\x11GetVMMetadataResp\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06chroot\x18\x02 \x01(\tR\x06chroot\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\tR\x03pid\x12\x1a\n" +
	"\bworkload\x18\x05 \x01(\tR\bworkload\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\"4\n" +
	"\x06VMList\x12*\n" +
	"\x03vms\x18\x01 \x03(\v2\x18.proto.GetVMMetadataRespR\x03vms\"F\n" +
	"\x12SendSSHCommandResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\"\x1e\n" +
	"\n" +
	"GetPIDResp\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid2\xe0\x04\n" +
	"\fOrchestrator\x122\n" +
	"\aStartVM\x12\x11.proto.StartVMReq\x1a\x12.proto.StartVMResp\"\x00\x12;\n" +
	"\n" +
	"SnapshotVM\x12\x14.proto.SnapshotVMReq\x1a\x15.proto.SnapshotVMResp\"\x00\x128\n" +
	"\tRestoreVM\x12\x13.proto.RestoreVMReq\x1a\x14.proto.RestoreVMResp\"\x00\x12+\n" +
	"\x06StopVM\x12\x10.proto.StopVMReq\x1a\r.proto.Status\"\x00\x12(\n" +
	"\aCleanup\x12\f.proto.Empty\x1a\r.proto.Status\"\x00\x122\n" +
	"\aGetVMIP\x12\x11.proto.GetVMIPReq\x1a\x12.proto.GetVMIPResp\"\x00\x12(\n" +
	"\aListVMs\x12\f.proto.Empty\x1a\r.proto.VMList\"\x00\x124\n" +
	"\rListSnapshots\x12\f.proto.Empty\x1a\x13.proto.SnapshotList\"\x00\x12D\n" +
	"\rGetVMMetadata\x12\x17.proto.GetVMMetadataReq\x1a\x18.proto.GetVMMetadataResp\"\x00\x12G\n" +
	"\x0eSendSSHCommand\x12\x18.proto.SendSSHCommandReq\x1a\x19.proto.SendSSHCommandResp\"\x00\x12+\n" +
	"\x06GetPID\x12\f.proto.Empty\x1a\x11.proto.GetPIDResp\"\x00B+Z)github.com/JooyoungPark73/khala/pkg/protob\x06proto3"

var (
	file_vm_orchestrator_proto_rawDescOnce sync.Once
	file_vm_orchestrator_proto_rawDescData []byte
)

func file_vm_orchestrator_proto_rawDescGZIP() []byte {
	file_vm_orchestrator_proto_rawDescOnce.Do(func() {
		file_vm_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vm_orchestrator_proto_rawDesc), len(file_vm_orchestrator_proto_rawDesc)))
	})
	return file_vm_orchestrator_proto_rawDescData
}

var file_vm_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_vm_orchestrator_proto_goTypes = []any{
	(*StartVMReq)(nil),         // 0: proto.StartVMReq
	(*SnapshotVMReq)(nil),      // 1: proto.SnapshotVMReq
	(*RestoreVMReq)(nil),       // 2: proto.RestoreVMReq
	(*StopVMReq)(nil),          // 3: proto.StopVMReq
	(*GetVMIPReq)(nil),         // 4: proto.GetVMIPReq
	(*GetVMMetadataReq)(nil),   // 5: proto.GetVMMetadataReq
	(*SendSSHCommandReq)(nil),  // 6: proto.SendSSHCommandReq
	(*Empty)(nil),              // 7: proto.Empty
	(*Status)(nil),             // 8: proto.Status
	(*StartVMResp)(nil),        // 9: proto.StartVMResp
	(*SnapshotVMResp)(nil),     // 10: proto.SnapshotVMResp
	(*RestoreVMResp)(nil),      // 11: proto.RestoreVMResp
	(*GetVMIPResp)(nil),        // 12: proto.GetVMIPResp
	(*SnapshotList)(nil),       // 13: proto.SnapshotList
	(*GetVMMetadataResp)(nil),  // 14: proto.GetVMMetadataResp
	(*VMList)(nil),             // 15: proto.VMList
	(*SendSSHCommandResp)(nil), // 16: proto.SendSSHCommandResp
	(*GetPIDResp)(nil),         // 17: proto.GetPIDResp
}
var file_vm_orchestrator_proto_depIdxs = []int32{
	14, // 0: proto.VMList.vms:type_name -> proto.GetVMMetadataResp
	0,  // 1: proto.Orchestrator.StartVM:input_type -> proto.StartVMReq
	1,  // 2: proto.Orchestrator.SnapshotVM:input_type -> proto.SnapshotVMReq
	2,  // 3: proto.Orchestrator.RestoreVM:input_type -> proto.RestoreVMReq
	3,  // 4: proto.Orchestrator.StopVM:input_type -> proto.StopVMReq
	7,  // 5: proto.Orchestrator.Cleanup:input_type -> proto.Empty
	4,  // 6: proto.Orchestrator.GetVMIP:input_type -> proto.GetVMIPReq
	7,  // 7: proto.Orchestrator.ListVMs:input_type -> proto.Empty
	7,  // 8: proto.Orchestrator.ListSnapshots:input_type -> proto.Empty
	5,  // 9: proto.Orchestrator.GetVMMetadata:input_type -> proto.GetVMMetadataReq
	6,  // 10: proto.Orchestrator.SendSSHCommand:input_type -> proto.SendSSHCommandReq
	7,  // 11: proto.Orchestrator.GetPID:input_type -> proto.Empty
	9,  // 12: proto.Orchestrator.StartVM:output_type -> proto.StartVMResp
	10, // 13: proto.Orchestrator.SnapshotVM:output_type -> proto.SnapshotVMResp
	11, // 14: proto.Orchestrator.RestoreVM:output_type -> proto.RestoreVMResp
	8,  // 15: proto.Orchestrator.StopVM:output_type -> proto.Status
	8,  // 16: proto.Orchestrator.Cleanup:output_type -> proto.Status
	12, // 17: proto.Orchestrator.GetVMIP:output_type -> proto.GetVMIPResp
	15, // 18: proto.Orchestrator.ListVMs:output_type -> proto.VMList
	13, // 19: proto.Orchestrator.ListSnapshots:output_type -> proto.SnapshotList
	14, // 20: proto.Orchestrator.GetVMMetadata:output_type -> proto.GetVMMetadataResp
	16, // 21: proto.Orchestrator.SendSSHCommand:output_type -> proto.SendSSHCommandResp
	17, // 22: proto.Orchestrator.GetPID:output_type -> proto.GetPIDResp
	12, // [12:23] is the sub-list for method output_type
	1,  // [1:12] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_vm_orchestrator_proto_init() }
func file_vm_orchestrator_proto_init() {
	if File_vm_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vm_orchestrator_proto_rawDesc), len(file_vm_orchestrator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vm_orchestrator_proto_goTypes,
		DependencyIndexes: file_vm_orchestrator_proto_depIdxs,
		MessageInfos:      file_vm_orchestrator_proto_msgTypes,
	}.Build()
	File_vm_orchestrator_proto = out.File
	file_vm_orchestrator_proto_goTypes = nil
	file_vm_orchestrator_proto_depIdxs = nil
}
